import json
from random import randint
from defs import *
from db import *
from flask import Flask, request
import time




bot.remove_webhook()
time.sleep(2)

bot.set_webhook(url="https://83.222.11.20:443", certificate=open("cert/certificate.crt", 'r'))
app = Flask(__name__)

commands = ["üèµ  –£—Å–ª—É–≥–∏", "üö©  –ü–æ–∏—Å–∫", "‚ùì  –í–æ–ø—Ä–æ—Å—ã", "‚òÄ  –ü–æ–≥–æ–¥–∞", "üí≤  –ö—É—Ä—Å—ã", "üèù  –ú–æ—Ä–µ", "/start",
            "‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "You successfully transferred"]
provider_token = "401643678:TEST:5471e078-3838-40b1-bdea-4e4245e9a902"


@app.route("/", methods=["POST"])
def menu():
    r = request.get_json()
    if "message" in r.keys() and "callback_query" not in r.keys():
        r = r["message"]
        if "successful_payment" in r.keys():
            message = Message.de_json(r)
            send_success_paid(message)
            return "ok", 200
        message = Message.de_json(r)
        if message.from_user.username == "leoolleo":
            bot.send_message(message.chat.id,
                             "ü§î –í—ã –ø–æ—Ö–æ–∂–∏ –Ω–∞ –û–ª—å–≥—É.\n –í—Å–µ –û–ª—å–≥–∏ –≤–Ω–µ—Å–µ–Ω—ã –≤ —á–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.\n\n ‚ùì –î–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –¥–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–æ–µ–¥—å—Ç–µ –≤ –ü–µ—Ä–º—å –ª–∏—á–Ω–æ.")
        else:
            user = session.query(User).filter_by(name=message.from_user.username).first()
            if not user:
                markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
                itembtn1 = KeyboardButton('üèµ  –£—Å–ª—É–≥–∏')
                itembtn2 = KeyboardButton('üö©  –ü–æ–∏—Å–∫')
                itembtn3 = KeyboardButton('‚ùì  –í–æ–ø—Ä–æ—Å—ã')
                markup.add(itembtn1, itembtn2, itembtn3)
                bot.send_message(message.chat.id,
                                 "–ü—Ä–∏–≤–µ—Ç, —á—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞–∂–º–∏ –Ω–∞ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ", reply_markup=markup)
                user = User(message.from_user.username, 0)
                session.add(user)
                session.commit()
            elif message.text in ["‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "/start"]:
                markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
                itembtn1 = KeyboardButton('üèµ  –£—Å–ª—É–≥–∏')
                itembtn2 = KeyboardButton('üö©  –ü–æ–∏—Å–∫')
                itembtn3 = KeyboardButton('‚ùì  –í–æ–ø—Ä–æ—Å—ã')
                markup.add(itembtn1, itembtn2, itembtn3)
                bot.send_message(message.chat.id, "üôè –ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å?\n\n "
                                                  "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å.\n\n"
                                                  " –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Å–∫—Ä–µ–ø–æ—á–∫—É üëá –∏ —è –ø–æ—Å–º–æ—Ç—Ä—é —á—Ç–æ –µ—Å—Ç—å –Ω–∞ –∫–∞—Ä—Ç–µ —Ä—è–¥–æ–º"
                                                  " —Å —ç—Ç–æ–π —Ç–æ—á–∫–æ–π.\n\n –í—ã–ø–æ–ª–Ω–∏ –∫–æ–º–∞–Ω–¥—É /help —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —á—Ç–æ –µ—â—ë —è —É–º–µ—é.",
                                 reply_markup=markup)
            elif message.text in ["üö©  –ü–æ–∏—Å–∫", "/search"]:
                example = session.query(Info).filter_by(id=randint(1, 75)).first()
                example = example.text
                for i in ["üì∑", "üí¨"]:
                    if i in example:
                        example = example.replace(i, "")
                text = "üôãüèª‚Äç‚ôÇÔ∏è <b>–ò—Å–∫–∞—Ç—å –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–æ!</b>\n" \
                       "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –Ω–∞—á–∏–Ω–∞—é—â–∏–π—Å—è —Å–æ —Å–ª–æ–≤–∞ –≥–¥–µ –∏ —è\n" \
                       " –ø–æ–∏—â—É –ø–æ –Ω–∞—à–µ–π –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–π üó∫ <a href='https://phoogle.ru/?utm_source=ThaiBot&utm_medium=searchHelp'>" \
                       "–Ω–∞—Ä–æ–¥–Ω–æ–π –∫–∞—Ä—Ç–µ</a>  –∏ –µ—Å–ª–∏ –Ω–∞–π–¥—É\n" \
                       " —á—Ç–æ-–Ω–∏–±—É–¥—å –ø–æ–¥—Ö–æ–¥—è—â–µ–µ - —Å–∫–∏–Ω—É —Ç–æ—á–∫—É.\n\n" \
                       "<b>–ù–∞–ø—Ä–∏–º–µ—Ä:</b>\n" \
                       f"<code>{example}</code>"
                bot.send_message(message.chat.id, text, disable_web_page_preview=True)

            elif message.text in ["zopa"]:
                bot.send_message("chtotimnesdelaesh12", "dsfsdf")

            elif message.text in ['üèµ  –£—Å–ª—É–≥–∏', "/service"]:
                markup = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
                itembtn1 = KeyboardButton('‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
                markup.add(itembtn1)
                bot.send_message(message.chat.id,
                                 "‚ÑπÔ∏è –Ø —Å–∫—Ä—ã–ª –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –ö–æ–≥–¥–∞ –æ–Ω–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è - –≤—ã–∑–æ–≤–∏ –∫–æ–º–∞–Ω–¥—É"
                                 " /start –∏–ª–∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é¬ª.", reply_markup=markup)

                keyboard = [[InlineKeyboardButton("üì© –î–æ—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π", url='https://t.me/phuketads', )],
                            [InlineKeyboardButton("üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ", callback_data='photographer')],
                            [InlineKeyboardButton("üèù –≠–∫—Å–∫—É—Ä—Å–∏–∏", callback_data='excursions')],
                            [InlineKeyboardButton("üöó –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ/–±–∞–π–∫–∞", callback_data='auto')]]
                reply_markup = InlineKeyboardMarkup(keyboard)
                bot.send_message(message.chat.id, "üèµ –£—Å–ª—É–≥–∏ –º–æ–∏—Ö –¥—Ä—É–∑–µ–π.\n\n–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞ —Å–≤–æ—é –∫–Ω–æ–ø–∫—É?\n"
                                                  "<a href='https://telegra.ph/Phoogle-advertising-02-10'>–û–∑–Ω–∞–∫–æ–º—å—Å—è</a>"
                                                  " –∏ —Å–≤—è–∂–∏—Å—å —Å @phoogle üòâ",
                                 reply_markup=reply_markup, parse_mode="HTML", disable_web_page_preview=True)
            elif message.text == "‚ùì  –í–æ–ø—Ä–æ—Å—ã":
                send_info(message)
            elif message.text not in commands or message["content_type"] != "successful_payment":
                requests = request_search(message.text)
                points = {}
                for i in requests:
                    if i['poiName'] == "Palm Tree Rentals":
                        continue
                    points[requests.index(i)] = {"title": i['poiName'], "description": i['poiDesc'], "lat": i["lat"],
                                                 "lng": i["lng"],
                                                 "pid": i["pid"]}
                if points == {}:
                    info = send_info_disc(message)
                    if info is False:
                        send_no_points(message)
                elif len(points) == 1:
                    send_point_info(points, message)
                elif len(requests) <= 6:
                    send_several_point(points, message)
                else:
                    send_many_points(points, message)
        return "ok", 200
    elif "callback_query" in r.keys():
        r = r["callback_query"]
        call = CallbackQuery.de_json(r)
        result = call.data.split("_")
        if "method" in call.data:
            data = json.loads(call.data)
            page = data["page"]
            count = session.query(Info.id).order_by(Info.id.desc()).first()[0]
            keyboard = [[InlineKeyboardButton('‚Ü© –ù–∞–∑–∞–¥',
                                              callback_data='{\"method\":\"pagination\",\"page\":' + str(
                                                  page - 1) + "}"),
                         InlineKeyboardButton("–°–ª–µ–¥—É—é—â–∏–µ 15 ‚û°",
                                              callback_data="{\"method\":\"pagination\",\"page\":" + str(
                                                  page + 1) + "}")]]
            if page == 1:
                keyboard = [[InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∏–µ 15 ‚û°',
                                                  callback_data='{\"method\":\"pagination\",\"page\":' + str(
                                                      page + 1) + "}"), ]]
            if page * 15 >= count:
                keyboard = [[InlineKeyboardButton('‚Ü© –ù–∞–∑–∞–¥', callback_data='{\"method\":\"pagination\",\"page\":' + str(
                    page - 1) + "}"), ]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            send_pagination(message=call, reply_markup=reply_markup, page=page, count=count)
        else:
            category = result[0]
            match category:
                case "service-back":
                    keyboard = [[InlineKeyboardButton("üì© –î–æ—Å–∫–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π", url='https://t.me/phuketads', )],
                                [InlineKeyboardButton("üì∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ", callback_data='photographer')],
                                [InlineKeyboardButton("üèù –≠–∫—Å–∫—É—Ä—Å–∏–∏", callback_data='excursions')],
                                [InlineKeyboardButton("üöó –ê—Ä–µ–Ω–¥–∞ –∞–≤—Ç–æ/–±–∞–π–∫–∞", callback_data='auto')]]
                    reply_markup = InlineKeyboardMarkup(keyboard)
                    bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.id,
                                          text="üèµ –£—Å–ª—É–≥–∏ –º–æ–∏—Ö –¥—Ä—É–∑–µ–π.\n\n"
                                               "–•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞ —Å–≤–æ—é –∫–Ω–æ–ø–∫—É?\n"
                                               " <a href='https://telegra.ph/Phoogle-advertising-02-10'>–û–∑–Ω–∞–∫–æ–º—å—Å—è</a>"
                                               " –∏ —Å–≤—è–∂–∏—Å—å —Å @phoogle üòâ",
                                          reply_markup=reply_markup, parse_mode="HTML", disable_web_page_preview=True)
                case "photographer":
                    keyboard = [[InlineKeyboardButton('üì∏ –ó–∞–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—é', callback_data='none')],
                                [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data='service-back')]]
                    reply_markup = InlineKeyboardMarkup(keyboard)
                    text = "üèù <b>–§–æ—Ç–æ–≥—Ä–∞—Ñ</b> -<a href='t.me/chtotimnesdelaesh12'>–ú–∏—Ö–∞–∏–ª –ë–∞—Ç–µ–Ω—ë–≤</a>\n\n–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!" \
                           " –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∏—Ö–∞–∏–ª –ë–∞—Ç–µ–Ω—ë–≤.–° 2010 –≥–æ–¥–∞ –∑–∞–Ω–∏–º–∞—é—Å—å —Ñ–æ—Ç–∞" \
                           " —Å 2017 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é –Ω–∞ –ü—Ö—É–∫–µ—Ç–µ –∏ –ø–æ –≤—Å–µ–º—É –¢–∞–∏–ª–∞–Ω–¥—É.\n\n" \
                           " –ï—Å–ª–∏ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–∏–µ—Å—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, —Ç–æ —Å–º–µ–ª–æ –ø–∏—à–∏—Ç–µ –º–Ω–µ. –°–¥–µ–ª–∞–µ–º!\n\n" \
                           "-–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É—é —Å–≤–∞–¥—å–±—ã, love-story –∏ —Å–µ–º—å–∏, –∞ —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–æ–∂—É –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏ –ø–∞—Ä–Ω—ã–µ —Å—ä—ë–º–∫–∏ –≤ " \
                           "–∂–∞–Ω—Ä–µ –Ω—é," \
                           "-–ó–Ω–∞—é –º–Ω–æ–∂–µ—Å—Ç–≤–æ –Ω–µ –ø–æ–ø—Å–æ–≤—ã—Ö –ª–æ–∫–∞—Ü–∏–π,\n -–í—ã—Å—ã–ª–∞—é –ø–æ –∑–∞–ø—Ä–æ—Å—É —Å–≤–æ–π –≥–∞–π–¥" \
                           " —Å –ø–æ–ª–µ–∑–Ω—ã–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏ –ø–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∫ —Å—ä—ë–º–∫–µ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º,\n-–ò–º–µ–µ—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –±–æ–∫—Å –¥–ª—è" \
                           "–ø–æ–¥–≤–æ–¥–Ω—ã—Ö —Å—ä—ë–º–æ–∫ –∏ –∫–æ–ø—Ç–µ—Ä –¥–ª—è —Å—ä—ë–º–æ–∫ —Å –≤–æ–∑–¥—É—Ö–∞,\n-–ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é –±–æ–¥–∏ –¥–ª—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö " \
                           "—Å—ä—ë–º–æ–∫.\n\n" \
                           "–ú–æ–∏ —Å–æ—Ü. —Å–µ—Ç–∏:\n–°–≤–∞–¥—å–±—ã, love-story, —Å–µ–º—å–∏ - instagram.com/mikebatenev\n " \
                           "Love-Story',–ø–æ—Ä—Ç—Ä–µ—Ç—ã –∏ –Ω—é - instagram.com/mikbsxy\n\n" \
                           "–ú–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã [WhatsApp, Telegram, Viber]: +79324135587)"
                    bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.id, text=text,
                                          parse_mode="HTML", disable_web_page_preview=True, reply_markup=reply_markup)
                case "excursions":
                    keyboard = [[InlineKeyboardButton('üèù –ó–∞–∫–∞–∑–∞—Ç—å —ç–∫—Å–∫—É—Ä—Å–∏—é', callback_data='none')],
                                [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data='service-back')]]
                    reply_markup = InlineKeyboardMarkup(keyboard, )
                    text = "üèù –≠–∫—Å–∫—É—Ä—Å–∏–∏ –æ—Ç Travel Service Thailand\n\n" \
                           "üî∏ <a href ='https://teletype.in/@elphuket/obzornaya'> –û–±–∑–æ—Ä–Ω–∞—è —ç–∫—Å–∫—É—Ä—Å–∏—è –±–µ–∑ –º–∞–≥–∞–∑–∏–Ω–æ–≤</a> \n" \
                           "üî∏ <a href ='https://teletype.in/@elphuket/amazing-phangnga'> –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è –ü—Ö–∞–Ω–≥ –ù–≥–∞ + –ü–ª—è–∂ –ú–∞–π–∫–∞–æ </a>\n" \
                           "üî∏ <a href ='https://teletype.in/@elphuket/khaolak'> –ö–∞–æ–ª–∞–∫ + –ü–ª—è–∂ —Å —Å–∞–º–æ–ª–µ—Ç–∞–º–∏ –ú–∞–π–∫–∞–æ</a> \n" \
                           "üî• <a href ='https://teletype.in/@elphuket/cheowlan'> –û–∑–µ—Ä–æ –ß–µ–æ–ª–∞–Ω 2 –¥–Ω—è (Laguna Raft)</a> \n" \
                           "üî∏ 2–≤1 –†–∞—á–∞ + –ö–æ—Ä–∞–ª –Ω–∞ —Å–ø–∏–¥–±–æ—Ç–µ\n" \
                           "üî∏ 3–≤1 –†–∞—á–∞ + –ö–æ—Ä–∞–ª + –ú–∞–π—Ç–æ–Ω –Ω–∞ —Å–ø–∏–¥–±–æ—Ç–µ\n" \
                           "üî∏ 3–≤1 –†–∞—á–∞ + –ö–æ—Ä–∞–ª + –ó–∞–∫–∞—Ç —É –ü—Ä–æ–º—Ç—Ö–µ–ø–∞ –Ω–∞ –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–µ\n" \
                           "üî∏ <a href='https://teletype.in/@elphuket/5in15–≤1'> –†–∞—á–∞ + –ö–æ—Ä–∞–ª + –ú–∞–π—Ç–æ–Ω + –ö–∞–π –ù–æ–∫ + –ö–∞–π –ù—É–π</a> \n" \
                           "üî• <a href='https://teletype.in/@elphuket/similan'> –°–∏–º–∏–ª–∞–Ω—ã –Ω–∞ —Å–ø–∏–¥–±–æ—Ç–µ/–∫–∞—Ç–∞–º–∞—Ä–∞–Ω–µ</a> \n" \
                           "üî∏ –°–∏–º–∏–ª–∞–Ω—ã 2 –¥–Ω—è —Å –Ω–æ—á–µ–≤–∫–æ–π –Ω–∞ –∫–æ—Ä–∞–±–ª–µ\n" \
                           "üî∏ –û—Å—Ç—Ä–æ–≤ –°—É—Ä–∏–Ω –Ω–∞ —Å–ø–∏–¥–±–æ—Ç–µ\n" \
                           "üî∏ <a href='https://teletype.in/@elphuket/jb'> –û—Å—Ç—Ä–æ–≤–∞ –ë–æ–Ω–¥–∞ –Ω–∞ —Å–ø–∏–¥–±–æ—Ç–µ</a> \n" \
                           "üî∏ –û—Å—Ç—Ä–æ–≤–∞ –ü—Ö–∏ –ü—Ö–∏ + –ë–∞–º–±—É –Ω–∞ —Å–ø–∏–¥–±–æ—Ç–µ\n" \
                           "üî∏ –ü–æ–ª–µ—Ç –•–∞–Ω—É–º–∞–Ω–∞\n\n" \
                           "üßæ –ü—Ä–∞–π—Å–ª–∏—Å—Ç –∏ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ —Å—Å—ã–ª–∫–µ - https://elphuket.ru/price/"
                    bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.id, text=text,
                                          parse_mode="HTML", disable_web_page_preview=True, reply_markup=reply_markup)
                case "auto":
                    keyboard = [[InlineKeyboardButton('üöó –í—ã–±—Ä–∞—Ç—å –∞–≤—Ç–æ', callback_data='auto-choice')],
                                [InlineKeyboardButton('üèçÔ∏è –í—ã–±—Ä–∞—Ç—å –±–∞–π–∫', callback_data='bike-choice')],
                                [InlineKeyboardButton("‚Ü© –Ω–∞–∑–∞–¥", callback_data='service-back')]]
                    reply_markup = InlineKeyboardMarkup(keyboard)
                    text = "üöó <b>–ê—Ä–µ–Ω–¥–∞ –±–∞–π–∫–æ–≤ –∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç @AvtoBike.</b>\n\n" \
                           "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤ –∞—Ä–µ–Ω–¥—É –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ —Ä–∞–∑–Ω–æ–≥–æ —Ç–∏–ø–∞. –í—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –∑–∞—Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω—ã –ø–æ –ø–µ—Ä–≤–æ–º—É –∫–ª–∞—Å—Å—É.\n\n" \
                           "<b>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–∞—á–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–π–æ–Ω–æ–≤ –ß–∞–ª–æ–Ω–≥, –†–∞–≤–∞–∏, –ö–∞—Ç–∞, –ö–∞—Ä–æ–Ω.</b>\n\n" \
                           "–ü–æ–¥–∞—á–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–π–æ–Ω–æ–≤ –ü–∞—Ç–æ–Ω–≥, –ö–∞—Ç—É, –ö–∞–º–∞–ª–∞ - 800 –±–∞—Ç.\n" \
                           "–ü–æ–¥–∞—á–∞ –≤ —É–¥–∞–ª—ë–Ω–Ω—ã–µ —Ä–∞–π–æ–Ω—ã —Å–µ–≤–µ—Ä–Ω–µ–µ –ø–ª—è–∂–∞ –ö–∞–º–∞–ª–∞ (–°—É—Ä–∏–Ω, –ë–∞–Ω–≥ –¢–∞–æ, –ê—ç—Ä–æ–ø–æ—Ä—Ç, ...) - 1000 –±–∞—Ç."
                    bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.id, text=text,
                                          parse_mode="HTML", disable_web_page_preview=True, reply_markup=reply_markup)
                case "auto-choice":
                    keyboard = [[InlineKeyboardButton('üöó Toyota Altis', callback_data='toyota-altis'),
                                 InlineKeyboardButton('üöó Chevrolet Aveo', callback_data='chevrolet-aveo')],
                                [InlineKeyboardButton('üöó Toyota Vios 2008', callback_data='toyota-vios-2008'),
                                 InlineKeyboardButton('üöó Toyota Vios 2012', callback_data='toyota-vios-2012')],
                                [InlineKeyboardButton('üöó Mazda 3', callback_data='mazda-3'),
                                 InlineKeyboardButton('üöó Nissan Almera', callback_data='nissan-almera')],
                                [InlineKeyboardButton('üöê Toyota Wish', callback_data='toyota-wish'),
                                 InlineKeyboardButton('üöê Toyota Sianta', callback_data='toyota-sianta')],
                                [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data='auto')]]
                    reply_markup = InlineKeyboardMarkup(keyboard)
                    text = "üöó <b>–ù–∞—à–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏.</b>\n\n" \
                           "–ù–∞—à –∞–≤—Ç–æ–ø–∞—Ä–∫ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –±–æ–ª–µ–µ —á–µ–º 20 –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å–ª–µ–¥—É—é—â–∏—Ö –º–∞—Ä–æ–∫:\n\n" \
                           "–ü—è—Ç–∏–º–µ—Å—Ç–Ω—ã–µ:\n" \
                           "üöó <b>Toyota Altis / Vios 2008 –∏–ª–∏ Chevrolet Aveo</b> ‚Äî –æ—Ç 450‡∏ø\n" \
                           "üöó <b>Toyota Vios 2012</b> ‚Äî –æ—Ç 500‡∏ø\n" \
                           "üöó <b>Mazda 3</b> ‚Äî –æ—Ç 500‡∏ø\n" \
                           "üöó <b>Nissan Almera</b> ‚Äî –æ—Ç 500‡∏ø\n\n" \
                           "–°–µ–º–∏–º–µ—Å—Ç–Ω—ã–µ:\n" \
                           "üöê <b>Toyota Wish</b> ‚Äî –æ—Ç 600‡∏ø\n" \
                           "üöê <b>Toyota Sienta</b> ‚Äî –æ—Ç 700‡∏ø\n\n" \
                           "<i>–£–∫–∞–∑–∞–Ω—ã –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã –ø—Ä–∏ –∞—Ä–µ–Ω–¥–µ –æ—Ç 22 –¥–Ω–µ–π.</i>"
                    bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.id, text=text,
                                          parse_mode="HTML", disable_web_page_preview=True, reply_markup=reply_markup)
                case "toyota-altis":
                    run_cars_choice(result, call, "Toyota Corolla Altis 2008", "auto")
                case "chevrolet-aveo":
                    run_cars_choice(result, call, "Chevrolet Aveo", "auto")
                case "toyota-vios-2008":
                    run_cars_choice(result, call, "Toyota Vios (2008–≥)", "auto")
                case "toyota-vios-2012":
                    run_cars_choice(result, call, "Toyota Vios (2012–≥)", "auto")
                case "mazda-3":
                    run_cars_choice(result, call, "Mazda 3", "auto")
                case "nissan-almera":
                    run_cars_choice(result, call, "Nissan Almera", "auto")
                case "toyota-wish":
                    run_cars_choice(result, call, "Toyota Wish", "auto")
                case "toyota-sianta":
                    run_cars_choice(result, call, "Toyota Sianta", "auto")
                case "bike-choice":
                    keyboard = [[InlineKeyboardButton('üõµ Yamaha Fino/Mio', callback_data='yamaha-fino')],
                                [InlineKeyboardButton('üõµ Honda Click/AirBlade', callback_data='honda-click')],
                                [InlineKeyboardButton('üèç Honda PCX 2014', callback_data='honda-pcx-2014'),
                                 InlineKeyboardButton('üèç Honda PCX 2017', callback_data='honda-pcx-2017')],
                                [InlineKeyboardButton('üèç Yamaha NMAX', callback_data='yamaha-nmax'),
                                 InlineKeyboardButton('üèç Honda Forza', callback_data='honda-forza')],
                                [InlineKeyboardButton("‚Ü© –ù–∞–∑–∞–¥", callback_data='auto')]]
                    reply_markup = InlineKeyboardMarkup(keyboard)
                    text = "üõµ <b>–ù–∞—à–∏ –±–∞–π–∫–∏.</b>\n\n" \
                           "–ú—ã –º–æ–∂–µ–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ:\n" \
                           "üõµ <b>Yamaha Fino/Mio –∏–ª–∏ Honda Click/AirBlade</b>  ‚Äî –æ—Ç 150‡∏ø\n" \
                           "üèç <b>Honda PCX 2014</b> ‚Äî –æ—Ç 180‡∏ø\n" \
                           "üèç <b>Honda PCX 2017 –∏–ª–∏ Yamaha NMAX</b> ‚Äî –æ—Ç 230‡∏ø\n" \
                           "üèç <b>Honda Forza</b> ‚Äî –æ—Ç 350‡∏ø\n"
                    bot.edit_message_text(chat_id=call.from_user.id, message_id=call.message.id, text=text,
                                          parse_mode="HTML", disable_web_page_preview=True, reply_markup=reply_markup)
                case "yamaha-fino":
                    run_cars_choice(result, call, "Yamaha Fino / Mio", "bike")
                case "honda-click":
                    run_cars_choice(result, call, "Honda Click / AirBlade", "bike")
                case "honda-pcx-2014":
                    run_cars_choice(result, call, "Honda PCX 2014", "bike")
                case "honda-pcx-2017":
                    run_cars_choice(result, call, "Honda PCX 2017", "bike")
                case "yamaha-nmax":
                    run_cars_choice(result, call, "Yamaha NMAX", "bike")
                case "honda-forza":
                    run_cars_choice(result, call, "Honda Forza", "mydak")
                case "design":
                    design_car(call, result[1], result[2])
    elif "pre_checkout_query" in r:
        update = Update.de_json(r)
        bot.answer_pre_checkout_query(update.pre_checkout_query.id, ok=True)
    return "ok", 200

if __name__ == "__main__":
    app.run()
